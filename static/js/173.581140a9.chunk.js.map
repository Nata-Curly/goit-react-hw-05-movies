{"version":3,"file":"static/js/173.581140a9.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/services/fetchMovies.js","components/services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__iPuYx\",\"title\":\"MovieItem_title__JQYXo\",\"rate\":\"MovieItem_rate__-O5Fh\",\"image\":\"MovieItem_image__wpzZX\"};","import { Link } from 'react-router-dom';\nimport defaultPoster from '../images/no_poster.jpg';\nimport css from './MovieItem.module.css'\n\nconst MovieItem = ({ id, title, poster, rate, path }) => {\n    return (\n        <li className={css.item} id={id}>\n        <Link to={`/movies/${id}`} state={path}>\n          <img className={ css.image} src={ poster\n              ? `https://image.tmdb.org/t/p/w300/${poster}`\n              : defaultPoster}\n                alt={title}\n                loading=\"lazy\" />\n        </Link>\n            <h2 className={css.title}>{title}</h2>\n            <p className={css.rate}>Rating: {rate.toFixed(1)}</p>\n            </li>\n     );\n}\n \nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import MovieItem from \"components/MovieItem/MovieItem\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    \n    return ( \n        <ul className={css.list}>\n            {movies?.map(({id, title, poster_path, vote_average}) => (\n                <MovieItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    poster={poster_path}\n                    rate={vote_average}\n                    path={{from: location}}\n                />\n            ))}\n        </ul>\n     );\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array\n}\n\nexport default MoviesList;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c89dcf9a7de9ef86355d610380679a74';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\n\n// https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchTrendingMovies(page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/search/movie?query=memo&include_adult=true&language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchSearchMovie(searchText, page = 1) {\n    const params = new URLSearchParams({\n        query: searchText,\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072?append_to_response=movies&language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovie(id) {\n    const params = new URLSearchParams({\n        append_to_response: 'movies',\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072/credits?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovieCast(id) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/484089/reviews?language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\n\nexport async function fetchMovieRewiews(id, page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n    return data;\n};\n","export const STATUS = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    REJECTED: \"rejected\",\n    RESOLVED: \"resolved\",\n};"],"names":["id","title","poster","rate","path","className","css","to","state","src","defaultPoster","alt","loading","toFixed","movies","location","useLocation","map","poster_path","vote_average","from","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovie","append_to_response","fetchMovieCast","fetchMovieRewiews","STATUS","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}