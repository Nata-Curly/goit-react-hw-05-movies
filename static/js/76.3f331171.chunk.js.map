{"version":3,"file":"static/js/76.3f331171.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/fetchMovies.js","components/services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"name\":\"Cast_name__6UbFm\"};","import { useParams } from 'react-router-dom';\nimport { STATUS } from '../services/status';\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieCast } from 'components/services/fetchMovies';\nimport Loader from 'components/Loader/Loader';\nimport defaultPoster from '../images/no_poster.jpg';\nimport css from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function getMovieCast() {\n            try {\n                const res = await fetchMovieCast(movieId);\n                setCast(res.cast);\n                setStatus(STATUS.RESOLVED);\n            } catch (err) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        getMovieCast();\n    }, [movieId]);\n\n    if (status === STATUS.PENDING) {\n        return (<Loader />)\n    } else if (status === STATUS.RESOLVED) {\n        return (<div className={css.container}>\n            <h2>Cast</h2>\n            {cast.length > 0 ? (\n                <ul className={css.list}>\n                    {cast?.map(({ id, profile_path, name, character }) => (<li className={css.item} key={id}>\n                        <img className={css.img} src={profile_path\n              ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n              : defaultPoster} alt={name} loading=\"lazy\"/>\n                        {name && <p className={css.name}>Name: {name}</p>}\n                        {character && <p className={css.name}>Character: {character}</p>}\n                    </li>))}\n                </ul>) : <p>no cast list</p>\n            }\n        </div>);\n    } else if (status === STATUS.REJECTED) {\n        return (<p>Something went wrong</p>)\n    };\n};\n\nCast.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n}\nexport default Cast;\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c89dcf9a7de9ef86355d610380679a74';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\n\n// https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchTrendingMovies(page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/search/movie?query=memo&include_adult=true&language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchSearchMovie(searchText, page = 1) {\n    const params = new URLSearchParams({\n        query: searchText,\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072?append_to_response=movies&language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovie(id) {\n    const params = new URLSearchParams({\n        append_to_response: 'movies',\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072/credits?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovieCast(id) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/484089/reviews?language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\n\nexport async function fetchMovieRewiews(id, page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n    return data;\n};\n","export const STATUS = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    REJECTED: \"rejected\",\n    RESOLVED: \"resolved\",\n};"],"names":["useState","cast","setCast","STATUS","status","setStatus","movieId","useParams","useEffect","fetchMovieCast","res","getMovieCast","Loader","className","css","length","map","id","profile_path","name","character","src","defaultPoster","alt","loading","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","fetchMovie","append_to_response","fetchMovieRewiews","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}