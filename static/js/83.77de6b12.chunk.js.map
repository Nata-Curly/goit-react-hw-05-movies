{"version":3,"file":"static/js/83.77de6b12.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/MovieDetails/MovieDetails.module.css?1b37","components/pages/MovieDetails/MovieDetails.jsx","components/services/fetchMovies.js","components/services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Movie_item__pbGQr\",\"item_img\":\"Movie_item_img__FQ17R\",\"item_description\":\"Movie_item_description__zgcgc\"};","import defaultPoster from '../images/no_poster.jpg';\nimport css from './Movie.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst Movie = ({ movie }) => {\n    const { poster_path, genres, homepage, overview, title, vote_average } = movie;\n    return ( \n        <div className={css.item}>\n            <img className={css.item_img} src={ poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : defaultPoster}\n                alt={title}\n                loading=\"lazy\" />\n            <div className={css.item_description}>\n            <h2>{title}</h2>\n            <h3>Overwiew</h3>\n            <p>{overview}</p>\n            <p>rate: {vote_average.toFixed(1)}</p>\n            <h3>Genres</h3>\n            <ul>\n         <li key={'genres'}>\n            {genres?.map(genre => genre.name).join(', ')}\n            </li>\n            </ul>\n            {homepage && (<a href={homepage} target=\"_blank\" rel=\"noreferrer\"><p>\n                    Official page</p></a>)}\n            </div>\n        </div>\n     );\n}\n\nMovie.propTypes = {\n    genres: PropTypes.array,\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    homepage: PropTypes.string,\n    overview: PropTypes.string,\n} \nexport default Movie;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__rZCdL\",\"back\":\"MovieDetails_back__C3KG7\",\"links\":\"MovieDetails_links__dE2b1\",\"link_item\":\"MovieDetails_link_item__TUNsp\"};","import Movie from \"components/Movie/Movie\";\nimport { fetchMovie } from '../../services/fetchMovies';\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport Loader from \"components/Loader/Loader\";\nimport { STATUS } from \"../../services/status\";\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  \n    const [movie, setMovie] = useState(null);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const { movieId } = useParams();\n    // console.log('movieId :>> ', movieId);\n    const location = useLocation();\n    const backLink = useRef([location.state?.from || '/']);\n\n    useEffect(() => {\n        if (!location.state) {\n            return;\n        }\n        if (backLink.current[backLink.current.length - 1] !== location.state.from) {\n            backLink.current.push(location.state.from)\n        }\n    }, [location]);\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function getMovie() {\n            try {\n                const movie = await fetchMovie(movieId);\n                setMovie(movie);\n                setStatus(STATUS.RESOLVED);\n            } catch (err) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        getMovie();\n    }, [movieId]);\n\n    const reduceLocation = () => {\n        backLink.current.pop();\n    }\n\n    if (status === STATUS.RESOLVED) {\n        return (\n            <div className={css.container}>\n                <Link to={backLink.current[backLink.current.length - 1]} onClick={reduceLocation}>\n                    <button className={css.back}>back</button>\n                </Link>\n                <Movie movie={movie} />\n                <div className={css.links}>\n                    <Link className={css.link_item} to='cast'>\n                        <h2>Cast</h2>\n                    </Link>\n                    <Link className={css.link_item} to='rewiews'>\n                        <h2>Rewiews</h2>\n                    </Link>\n                </div>\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n                \n            </div>)\n    } else if (status === STATUS.PENDING) {\n        return (<Loader />)\n    } else if (status === STATUS.REJECTED) {\n        return (<p>Something went wrong</p>)\n    };\n};\n  \nexport default MovieDetails;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c89dcf9a7de9ef86355d610380679a74';\nconst TRENDS = '/trending/movie/week';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/';\nconst CAST = '/credits';\nconst REWIEWS = '/reviews';\n\n\n// https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchTrendingMovies(page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${TRENDS}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/search/movie?query=memo&include_adult=true&language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchSearchMovie(searchText, page = 1) {\n    const params = new URLSearchParams({\n        query: searchText,\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${SEARCH}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072?append_to_response=movies&language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovie(id) {\n    const params = new URLSearchParams({\n        append_to_response: 'movies',\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/113072/credits?language=en-US&api_key=c89dcf9a7de9ef86355d610380679a74\nexport async function fetchMovieCast(id) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${CAST}?${params}`);\n    return data;\n};\n\n// https://api.themoviedb.org/3/movie/484089/reviews?language=en-US&page=1&api_key=c89dcf9a7de9ef86355d610380679a74\n\nexport async function fetchMovieRewiews(id, page = 1) {\n    const params = new URLSearchParams({\n        language: 'en-US',\n        page: page,\n        api_key: API_KEY,\n    });\n    const { data } = await axios.get(`${BASE_URL}${MOVIE}${id}${REWIEWS}?${params}`);\n    return data;\n};\n","export const STATUS = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    REJECTED: \"rejected\",\n    RESOLVED: \"resolved\",\n};"],"names":["movie","poster_path","genres","homepage","overview","title","vote_average","className","css","src","defaultPoster","alt","loading","toFixed","map","genre","name","join","href","target","rel","useState","setMovie","STATUS","status","setStatus","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","current","length","push","fetchMovie","getMovie","to","onClick","pop","Suspense","fallback","Loader","BASE_URL","API_KEY","TRENDS","SEARCH","MOVIE","CAST","REWIEWS","fetchTrendingMovies","page","params","URLSearchParams","language","api_key","axios","data","fetchSearchMovie","searchText","query","id","append_to_response","fetchMovieCast","fetchMovieRewiews","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}